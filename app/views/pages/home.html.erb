<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Scandit Example Page</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="build/browser/index.min.js"></script>

    <!-- The following is only an example style for the container element and other demo elements, it's not required -->
    <style>
      body {
        background-color: black;
        color: white;
        font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
      }

      .scanner {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
        max-width: 1280px;
        max-height: 80%;
      }

      .result-text {
        padding: 1rem;
        font-size: 18pt;
        text-align: center;
        white-space: pre;
        font-family: monospace;
      }
    </style>
  </head>

  <body>
    <div id="scandit-barcode-picker" class="scanner"></div>
    <div id="scandit-barcode-result" class="result-text"></div>

    <button id="start-scanner-button" onclick="startBarcodePicker();" style="display: none">
      Start and show BarcodePicker
    </button>

    <script>
      var scanditBarcodePicker;
      var barcodeResultElement = document.getElementById("scandit-barcode-result");
      var starterButton = document.getElementById("start-scanner-button");

      ScanditSDK.configure("AcNBaBp6OL7AKEDqMipZkFZAlsxfPT8weVaC9jJ02DqVdqHCh1LU65dtav7yVKwoQlsRyql63FJTfjeuLWgIl/1aYHQEQZN3jXPE+bBxqiNiKVIUwQlhz5QE5Fn1ODWgK42t2BrejN0VHjlX56G5/IW0CRKzmyLSsGrMYe3NSP9cX9dyCO7N0+JNtLg3sHPfsRNaS2XlzpKTEF6Fa8zxrKalWgrV+Pnf/FRitWJ8uMipbuwOlFHWEbmU+AvuEf+oU/UVteSLuWrD4tF4pu6orDZegifmUJe8UDUmHpNVwTDmmJqlhphDAwc5Yonw0G1/7ImPAQzuf9CtK3JvlYAif8ofkz3c0Kst+3snRdQKdUPOgfep1eg6V3485MDqzuctn8IIZsT39LDg+3pEfrjHZ8WvKKJ7b9LkQlVCjBCdGwzPAC70zf6ttSLLaPxp1JINC//gnkxEVzQTDzjFiFImyNtWtm0ebM8u6JeMUxmn2vN/lCECL++RXK90Ed6uRUpt0u/rFS0uyyyLfR6Gaj7HYQZtV2gK6RVxmdVcnfVvM0+4lizNxynRl13hp+IFNBeH0+OkNp37onFOKR5+xnWp1N7f4vU52GgvZoYf5HYoIRv3hPASHf+8pMzT8f9GPkSoeJUcv6E7DtQRUC6ak4V46E28LZu47w9M5irVQX8ZKuOwlLOAmiqDXDwZwImi3/CfruL83ZyPW+GQiH+NpvybzKMCZBIoecrwtRHEzPwcsYHmnx/9RcWa1gJglL/JUUv2xS2T1U7CI3WL86dzpofGZNrjzVAPtThge8JrtpmzdA==", {
        engineLocation: "https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build/",
      })
        .then(() => {
          return ScanditSDK.BarcodePicker.create(document.getElementById("scandit-barcode-picker"), {
            accessCamera: false,
            visible: false,
            playSoundOnScan: true,
            vibrateOnScan: true,
            scanSettings: new ScanditSDK.ScanSettings({
              enabledSymbologies: ["ean8", "ean13", "upca", "upce", "code128", "code39", "code93", "itf"],
              codeDuplicateFilter: 1000,
            }),
          }).then((barcodePicker) => {
            barcodeResultElement.innerHTML = "The BarcodePicker is loading...";
            scanditBarcodePicker = barcodePicker;
            barcodePicker
              .on("scan", (scanResult) => {
                document.getElementById("scandit-barcode-result").innerHTML =
                  scanResult.barcodes.reduce((string, barcode) => {
                    return `${string}${ScanditSDK.Barcode.Symbology.toHumanizedName(barcode.symbology)}: ${
                      barcode.data
                    }<br/>`;
                  }, "") +
                  scanResult.texts.reduce((string, text) => {
                    return `${string}${text.value
                      .replace(/&/g, "&amp;")
                      .replace(/</g, "&lt;")
                      .replace(/>/g, "&gt;")} (${text.location})<br/>`;
                  }, "");
                  console.log(scanResult);
                  let csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute("content");
                  fetch("/barcode", {
                    method: "POST",
                    //redirect: "follow",
                    headers: { "Content-Type": "application/json", "X-CSRF-Token": csrfToken},
                    body: JSON.stringify({
                      "symbology": scanResult.barcodes[0].symbology,
                      "data": scanResult.barcodes[0].data
                    })
                  })
                    .then(response => {
                      if (response.redirected) {
                        window.location.href = response.url
                      }
                    })
                    // .then(response => response.json())
                    // .then((data) => {
                    //   console.log("Hello")
                    // })
              })
              .on("scanError", (error) => {
                console.error(error);
              })
              .on("ready", () => {
                barcodeResultElement.innerHTML = "The BarcodePicker is ready!";
                starterButton.style.display = "inline-block";
              });
          });
        })
        .catch((error) => {
          console.error(error);
          alert(error);
        });

      function startBarcodePicker() {
        starterButton.style.display = "none";
        barcodeResultElement.innerHTML = "The BarcodePicker is accessing the camera...";
        scanditBarcodePicker.accessCamera().then(() => {
          barcodeResultElement.innerHTML = "";
          scanditBarcodePicker.setVisible(true);
        });
      }
    </script>
  </body>
</html>
